{
    "FindingName": "Highly Privileged Hidden Role Assignment Found",
    "Description": "Microsoft Entra has built-in roles that are largely hidden from tenant administrators. These roles, Partner Tier2 Support and Partner Tier1 Support, are not visible via the Entra ID Roles & admins GUI. In fact, they are only visible through a GUI if the tenant is licensed for Entra ID Premium 2, then the roles may be viewed via the Entra ID Privileged Identity Management (PIM) console. In addition to the difficulty administrators may encounter with visibility, the roles allow members excessive permissions that attackers can abuse to gain footholds in the tenant. The Partner Tier1 Support role allows role members to add new owner and members to security groups in the directory as well as adding new owners and credentials to Entra registered applications, paving the way for abuse of Oath applications in the tenant. The Partner Tier2 Support role is far more concerning as, in addition to the permissions granted to the Partner Tier1 Support role, this role allows members to modify application roles and permissions, escalate permissions to Global Administrator for themselves or any other principal/user in the tenant, and reset passwords of any user - including Global Administrators.",
    "Remediation": "It is recommended to regularly audit these roles memberships, audit members actions, and remove any members not explicitly authorized. Tenants with Entra ID Premium 2 licensing are recommended to leverage the PIM roles to assign expiring role assignment that requires elevation. Tenants without Entra ID Premium 2 licensing may audit these roles using the below PowerShell command",
    "DefaultValue": "None",
    "ExpectedValue": "None",
    "Impact": "Critical",
    "RiskRating": "Critical",
    "AffectedObjects": "",
    "Service": "AzureAD",
    "PowerShell": "# Audit Role Members\nGet-MgDirectoryRole | Where-Object {$_.displayName -like \"Partner *\"} | ForEach-Object {$role = [PSCustomObject]@{Name = $_.DisplayName;RoleId = $_.Id;Member = '';UserPrincipalName = '';Email = '';UserId = ''};Get-MgDirectoryRoleMember -DirectoryRoleId $_.Id | ForEach-Object{$role.Member = $_.AdditionalProperties.displayName;$role.UserPrincipalName = $_.AdditionalProperties.userPrincipalName;$role.Email = $_.AdditionalProperties.mail;$role.UserId = $_.Id};$role}\n\n# Remove Role Members\nRemove-MgDirectoryRoleMemberByRef -DirectoryRoleId $RoleId -DirectoryObjectId $UserId",
    "References": [
        {
            "Url": "https://posts.specterops.io/the-most-dangerous-entra-role-youve-probably-never-heard-of-e00ea08b8661",
            "Text": "The Most Dangerous Entra Role You've (Probably) Never Heard Of"
        }
    ]
}